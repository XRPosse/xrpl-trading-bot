[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "xrpl-trading-bot"
version = "0.1.0"
description = "An advanced automated trading bot for the XRP Ledger"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "XRPL Trading Bot Contributors"},
]
keywords = ["xrpl", "xrp", "trading", "bot", "cryptocurrency", "automated-trading"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial :: Investment",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/yourusername/xrpl-trading-bot"
Documentation = "https://github.com/yourusername/xrpl-trading-bot/tree/main/docs"
Repository = "https://github.com/yourusername/xrpl-trading-bot"
Issues = "https://github.com/yourusername/xrpl-trading-bot/issues"

[project.scripts]
xrpl-bot = "main:main"
xrpl-backtest = "backtest:main"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
)/
'''

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["src"]
skip_gitignore = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E266", "E501", "W503"]
max-complexity = 10
select = ["B", "C", "E", "F", "W", "T4", "B9"]